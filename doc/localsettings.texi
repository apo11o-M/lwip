@c Local settings

@set coursenumber CS 3204
@set localpintostarpath /home/courses/cs3204/pintos/pintos.tar.gz
@set localpintoshttppath http://@/courses.cs.vt.edu/@/~cs3204/@/pintos/@/pintos.@/tar.gz
@set localpintosbindir  /home/courses/cs3204/bin

@clear recommendsourceforge
@set recommendvnc
@set recommendcygwin

@macro localmachines{}
The CS 3204 ``officially supported''
Pintos development machines are the remote Linux cluster.
You can log on to those machines remotely using
@example
ssh -Y yourlogin@@rlogin.cs.vt.edu
@end example
@end macro

@macro localpathsetup{}
Under @command{csh} you can do so with this command:

@example
set path = ( ~cs3204/bin $path )
@end example
@noindent
It is a good idea to add this line to the @file{.cshrc} file
in your home directory.  Otherwise, you'll have to type it every time
you log in.
@command{bash} shell users would instead add
@example
export PATH=~cs3204/bin:$PATH
@end example
@noindent
to their @file{.bash_profile} file.
@end macro

@macro localcrossbuild{}
@c Watch the commands executed during the build.  On the Linux machines,
@c the ordinary system tools are used.  On a SPARC machine, special build
@c tools are used, whose names begin with @samp{i386-elf-}, e.g.@:
@c @code{i386-elf-gcc}, @code{i386-elf-ld}.  These are ``cross-compiler''
@c tools.  That is, the build is running on a SPARC machine (called the
@c @dfn{host}), but the result will run on a simulated 80@var{x}86 machine
@c (called the @dfn{target}).  The @samp{i386-elf-@var{program}} tools are
@c specially built for this configuration.
@end macro

@macro localhonorcodepolicy{}
@c In the context of Stanford's CS 140 course, please respect the spirit
@c and the letter of the honor code by refraining from reading any homework
@c solutions available online or elsewhere.  Reading the source code for
@c other operating system kernels, such as Linux or FreeBSD, is allowed,
@c but do not copy code from them literally.  Please cite the code that
@c inspired your own in your design documentation.
@end macro

@macro localcredits{}
Adjustments for Virginia Tech's CS 3204 were made by Godmar Back.
Vijay Kumar wrote the section on how to set up CVS. 
@end macro

@macro localcvspolicy{}
Instead, we recommend integrating your team's changes early and often,
using a source code control system such as CVS (@pxref{CVS}). 
@c or a
@c group collaboration site such as SourceForge (@pxref{SourceForge}).
This is less likely to produce surprises, because everyone can see
everyone else's code as it is written, instead of just when it is
finished.  These systems also make it possible to review changes and,
when a change introduces a bug, drop back to working versions of code.
@end macro

@macro localcodingstandards{}
All of you should have taken a class like CS 2604, so we expect you to be
familiar with some set of coding standards such as
@uref{http://courses.cs.vt.edu/%7Ecs2604/spring04/Standards.html
, CS 2604 General Programming Standards}.  
We also recommend that you review the
@uref{http://www.stanford.edu/class/cs140/projects/misc/CodingStandards.pdf,
, Stanford CS 107 Coding Standards}.
We expect code at the ``Peer-Review Quality'' level described in that document.
@end macro

@macro localdevelopmenttools{}
@c Descriptions of additional, local development tools can be inserted here
In addition, you can set up Cygwin's ssh client for password-less login as 
described earlier. @xref{Setting Up ssh}.
@end macro
